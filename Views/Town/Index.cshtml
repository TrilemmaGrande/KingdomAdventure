@{
    ViewData["Title"] = "Town Area";
}
@model PlayerTown

<div class="text-center">
    <h1 class="display-4">
        Welcome to
        @if (Model.TownName is null)
        {
            @:Town
        }
        else
        {
            @Model.TownName
        }
    </h1>
    @if (Model.TownName is null)
    {
        <a asp-action="CreateNewTown">Create Town</a>
    }
    else
    {
        if (Model.Stage < 3)
        {
            <a asp-action="IncreaseTownStage">Increase Town Stage (test)</a>
        }
        <br />
        <h3>Buildings in Town:</h3>
        @foreach (var buildingGroup in Model.TownBuildings.GroupBy(n => n.Building.BuildingName))
        {
            <div class="table row">
                @foreach (var dataset in buildingGroup)
                {
                    @:<div class="col">
                        @:------------------------------------------- <br />
                        <h5>@dataset.Building.BuildingName lvl @dataset.Level </h5>

                        bool buttonSwitch = false;
                        foreach (var ressource in dataset.Building.RessourceCost)
                        {
                            if (ressource.Amount > Model.TownRessources.FirstOrDefault(i => i.RessourceID == ressource.RessourceID).Amount)
                            {
                                buttonSwitch = false;
                                break;
                            }
                            else
                            {
                                buttonSwitch = true;
                            }
                        }
                        if (buttonSwitch)
                        {
                            if (dataset.Level < 3)
                            {
                                <a asp-action="LevelUpBuilding" asp-route-id="@dataset.BuildingID">Level Up</a>
                            }

                            <a asp-action="AddBuilding" asp-route-id="@dataset.BuildingID">Increase Amount</a>
                        }
                        <a asp-action="RemoveBuilding" asp-route-id="@dataset.TownBuildingID">Remove Building</a>
                        if (dataset.Workers < dataset.WorkersMax && Model.PopulationNotWorking > 0)
                        {
                            <a asp-action="AddWorkerToBuilding" asp-route-id="@dataset.TownBuildingID">Add Worker</a>
                        }
                        if (dataset.Workers > 0)
                        {
                            <a asp-action="SubWorkerFromBuilding" asp-route-id="@dataset.TownBuildingID">Sub Worker</a>
                        }
                        <br />
                        if (dataset.Population > 0)
                        {
                            @:Creates Population: <p>@dataset.Population</p>
                        }
                        if (dataset.Storage > 0)
                        {
                            @:Creates Storage: <p>@dataset.Storage</p>
                        }
                        <br />
                        @:Produces:
                        <br />
                        @:<p>
                            foreach (var productionRessource in dataset.Building.ProducingRessources)
                            {
                                @: @productionRessource.Ressource.RessourceName @productionRessource.ProduceInMinute
                            }
                            foreach (var productionSoldier in dataset.Building.ProducingSoldiers)
                            {
                                @: @productionSoldier.Soldier.SoldierName
                            }
                            <br />
                        @:</p>
                        <br />
                        @:Consumes:
                        <br />
                        if (dataset.Building.ConsumingRessources.Count > 0)
                        {
                            @:<p>
                                foreach (var consumingRessources in dataset.Building.ConsumingRessources)
                                {
                                    @: @consumingRessources.Ressource.RessourceName @consumingRessources.ConsumeInMinute
                                }
                            @:</p>
                        }
                        else
                        {
                            @:<p>nothing</p>
                        }
                        <br />
                        @:Ressources needed to Upgrade:
                        <br />
                        foreach (var ressourceCosts in dataset.Building.RessourceCost)
                        {
                            @:<p>@((int)Math.Floor(@ressourceCosts.Amount * 0.75)) @ressourceCosts.Ressource.RessourceName</p>
                        }
                        <br />
                        @:Workers:
                        <br />
                        @:<p>@dataset.Workers / @dataset.WorkersMax</p>
                        <br />
                    @:</div>
                }
            </div>
        }

        <h3>Buildings to build:</h3>
        @foreach (var dataset in ViewData["Buildings"] as IEnumerable<Building>)
        {
            if ((dataset.AvailableInStage <= Model.Stage && dataset.LockedInStage == false) ||
                dataset.AvailableInStage == Model.Stage && dataset.LockedInStage)
            {

                @:------------------------------------------- <br />
                @:<h5>@dataset.BuildingName</h5>
                bool buttonSwitch = false;
                foreach (var ressource in dataset.RessourceCost)
                {
                    if (ressource.Amount > Model.TownRessources.FirstOrDefault(i => i.RessourceID == ressource.RessourceID).Amount)
                    {
                        buttonSwitch = false;
                        break;
                    }
                    else
                    {
                        buttonSwitch = true;
                    }
                }
                if (buttonSwitch)
                {
                    <a asp-action="AddBuilding" asp-route-id="@dataset.BuildingID">Build</a>
                }
                <br />
                if (dataset.PopulationMaxTemplate > 0)
                {
                    @:Creates Population: <p>@dataset.PopulationMaxTemplate</p>
                }
                if (dataset.StorageMaxTemplate > 0)
                {
                    @:Creates Storage: <p>@dataset.StorageMaxTemplate</p>
                }
                <br />
                @:Can Produce:
                <br />
                foreach (var productionRessource in dataset.ProducingRessources)
                {
                    @:<p>@productionRessource.ProduceInMinute @productionRessource.Ressource.RessourceName</p>
                }
                <br />
                @:Will Consume:
                <br />
                if (dataset.ConsumingRessources.Count > 0)
                {
                    foreach (var consumingRessources in dataset.ConsumingRessources)
                    {
                        @:<p>@consumingRessources.ConsumeInMinute @consumingRessources.Ressource.RessourceName</p>
                    }
                }
                else
                {
                    @:<p>nothing</p>
                }
                <br />
                @:Ressources needed to build:
                <br />
                foreach (var ressourceCosts in dataset.RessourceCost)
                {
                    @:<p>@ressourceCosts.Amount @ressourceCosts.Ressource.RessourceName</p>
                }
                <br />
                @:Workplaces:
                <br />
                @:<p>@dataset.WorkersMaxTemplate</p>
                <br />
            }
        }
    }
</div>
