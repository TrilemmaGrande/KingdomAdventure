@{
    ViewData["Title"] = "Town Area";
}
@model Town

<div class="text-center">
    <h1 class="display-4">
        Welcome to
        @if (Model.TownName is null)
        {
            @:Town
        }
        else
        {
            @Model.TownName
        }
    </h1>
    @if (Model.TownName is null)
    {
        <a asp-action="CreateNewTown">Create Town</a>
    }
    else
    {
        <h3>Buildings in Town:</h3>
        @foreach (var buildingGroup in Model.TownBuildings.GroupBy(n => n.Building.BuildingName))
        {
            <div class="table row">
                @foreach (var dataset in buildingGroup)
                {
                    @:<div class="col">
                        @:------------------------------------------- <br />
                        <h5>@dataset.Building.BuildingName lvl @dataset.Level </h5>

                        bool buttonSwitch = false;
                        foreach (var ressource in dataset.Building.BuildingRessourcesCosts)
                        {
                            if (ressource.Amount > Model.TownRessources.FirstOrDefault(i => i.RessourceID == ressource.RessourceID).Amount)
                            {
                                buttonSwitch = false;
                                break;
                            }
                            else
                            {
                                buttonSwitch = true;
                            }
                        }
                        if (buttonSwitch)
                            if (dataset.Level < 3)
                            {
                                <a asp-action="LevelUpBuilding" asp-route-id="@dataset.BuildingID">Level Up</a>
                            }
                        {
                            <a asp-action="AddBuilding" asp-route-id="@dataset.BuildingID">Increase Amount</a>
                        }
                        if (dataset.Workers < dataset.WorkersMax && Model.PopulationNotWorking > 0)
                        {
                            <a asp-action="AddWorkerToBuilding" asp-route-id="@dataset.TownBuildingID">Add Worker</a>
                        }
                        if (dataset.Workers > 0)
                        {
                            <a asp-action="SubWorkerFromBuilding" asp-route-id="@dataset.TownBuildingID">Sub Worker</a>
                        }
                        <br />
                        @:Produces:
                        <br />
                        @:<p>
                            foreach (var productionRessource in dataset.Building.ProducingRessources)
                            {
                                @: @productionRessource.Ressource.RessourceName @productionRessource.Amount
                            }
                            <br />
                            @:Produced:
                            foreach (var producedRessource in dataset.RessourcesProduced)
                            {
                                @producedRessource.Ressource.RessourceName @producedRessource.Amount
                                @:Produced in Interval: @producedRessource.ProducedBetweenInterval
                            }
                        @:</p>
                        <br />
                        @:Consumes:
                        <br />
                        if (dataset.Building.ConsumingRessources.Count > 0)
                        {
                            @:<p>
                                foreach (var consumingRessources in dataset.Building.ConsumingRessources)
                                {
                                    @: @consumingRessources.Ressource.RessourceName @consumingRessources.Amount
                                }
                                @:Consumed:
                                foreach (var consumedRessource in dataset.RessourcesConsumed)
                                {
                                    @consumedRessource.Ressource.RessourceName @consumedRessource.Amount
                                    @:Consumed in Interval: @consumedRessource.ConsumedBetweenInterval
                                }
                            @:</p>
                        }
                        else
                        {
                            @:<p>nothing</p>
                        }
                        <br />
                        @:Ressources needed to Upgrade:
                        <br />
                        foreach (var ressourceCosts in dataset.Building.BuildingRessourcesCosts)
                        {
                            @:<p>@ressourceCosts.Amount @ressourceCosts.Ressource.RessourceName</p>
                        }
                        <br />
                        @:Workers:
                        <br />
                        @:<p>@dataset.Workers / @dataset.WorkersMax</p>
                        <br />
                    @:</div>
                }
            </div>
        }

        <h3>Buildings to build:</h3>
        @foreach (var dataset in ViewData["Buildings"] as IEnumerable<Building>)
        {
            @:------------------------------------------- <br />
            @:<h5>@dataset.BuildingName</h5>
            bool buttonSwitch = false;
            foreach (var ressource in dataset.BuildingRessourcesCosts)
            {
                if (ressource.Amount > Model.TownRessources.FirstOrDefault(i => i.RessourceID == ressource.RessourceID).Amount)
                {
                    buttonSwitch = false;
                    break;
                }
                else
                {
                    buttonSwitch = true;
                }
            }
            if (buttonSwitch)
            {
                <a asp-action="AddBuilding" asp-route-id="@dataset.BuildingID">Build</a>
            }
            <br />
            @:Can Produce:
            <br />
            foreach (var productionRessource in dataset.ProducingRessources)
            {
                @:<p>@productionRessource.Amount @productionRessource.Ressource.RessourceName</p>
            }
            <br />
            @:Will Consume:
            <br />
            if (dataset.ConsumingRessources.Count > 0)
            {
                foreach (var consumingRessources in dataset.ConsumingRessources)
                {
                    @:<p>@consumingRessources.Amount @consumingRessources.Ressource.RessourceName</p>
                }
            }
            else
            {
                @:<p>nothing</p>
            }
            <br />
            @:Ressources needed to build:
            <br />
            foreach (var ressourceCosts in dataset.BuildingRessourcesCosts)
            {
                @:<p>@ressourceCosts.Amount @ressourceCosts.Ressource.RessourceName</p>
            }
            <br />
            @:Workplaces:
            <br />
            @:<p>@dataset.WorkersMaxTemplate</p>
            <br />
        }
    }
</div>
