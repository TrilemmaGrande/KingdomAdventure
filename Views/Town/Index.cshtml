@{
    ViewData["Title"] = "Town Area";
}
@model PlayerTown
<script src="https://code.jquery.com/jquery-3.6.0.min.js" defer></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script defer>
    var townData = @Html.Raw(Json.Serialize(Model));

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/townHub")
        .build()

    function updateTownData(town) {
    }

    connection.on("ReceiveUpdateRessources", function (town) {
        updateTownData(town);
    });

    connection.start()
        .then(function () {
            setInterval(function () {
                connection.invoke("RequestUpdateRessources", townData);
            }, 10);
        })
        .catch(err => console.error(err));
</script>
<div class="container town-container">
    <div class="text-center">
        <h1 class="display-4">
            Welcome to
            @if (Model.TownName is null)
            {
                @:Town
            }
            else
            {
                @Model.TownName
            }
        </h1>
        @if (Model.TownName is null)
        {
            <a asp-action="CreateNewTown">Create Town</a>
        }
        else
        {
            if (Model.Stage < 3)
            {
                <a asp-action="IncreaseTownStage">Increase Town Stage (test)</a>
            }


            <h3>Buildings in Town:</h3>
            @:<div class="building-container">
                @foreach (var buildingGroup in Model.TownBuildings.GroupBy(n => n.Building.BuildingName))
                {
                    @foreach (var dataset in buildingGroup)
                    {
                        @:<div class="building-card">
                            <img src=@dataset.Building.Icon title="@dataset.Building.BuildingName" />
                            var levelIcon = "/img/Numbers/Roman/r" + dataset.Level + ".png";
                            <p>
                                <img class="icon" src="@levelIcon" title="Level" />
                            </p>
                            <br />

                            bool buttonSwitchUpgrade = false;
                            foreach (var buildingRessourceCost in dataset.Building.RessourceCost)
                            {
                                if ((int)Math.Floor(buildingRessourceCost.Amount * 0.75) > Model.TownRessources.FirstOrDefault(i => i.RessourceID == buildingRessourceCost.RessourceID).Amount
                                || dataset.Level >= 3)
                                {
                                    buttonSwitchUpgrade = false;
                                    break;
                                }
                                else
                                {
                                    buttonSwitchUpgrade = true;
                                }
                            }
                            if (buttonSwitchUpgrade)
                            {
                                <a asp-action="LevelUpBuilding" asp-route-id="@dataset.TownBuildingID"><img class="icon" src="~/img/Symbols/arrowUp.png" title="Level Up" /></a>
                            }
                            if (dataset.Workers < dataset.WorkersMax && Model.PopulationNotWorking > 0)
                            {
                                <a asp-action="AddWorkerToBuilding" asp-route-id="@dataset.TownBuildingID"><img class="icon" src="~/img/Symbols/workerPlus.png" title="Add Worker" /></a>
                            }
                            if (dataset.Workers > 0)
                            {
                                <a asp-action="SubWorkerFromBuilding" asp-route-id="@dataset.TownBuildingID"><img class="icon" src="~/img/Symbols/workerMinus.png" title="Sub Worker" /></a>
                            }
                            <a asp-action="RemoveBuilding" asp-route-id="@dataset.TownBuildingID"><img class="icon" src="~/img/Symbols/cross.png" title="Remove Building" /></a>

                            if (dataset.Population > 0)
                            {
                                <br />
                                @:Increases Population: @((dataset.Population).ToString("N0"))
                            }
                            if (dataset.Storage > 0)
                            {
                                <br />
                                @:Increases Storage: @((dataset.Storage).ToString("N0"))
                            }

                            <br />
                            @:Produces:
                            <br />
                            @if (dataset.Building.ProducingRessources.Count() > 0 || dataset.Building.ProducingSoldiers.Count() > 0)
                            {

                                foreach (var productionRessource in dataset.Building.ProducingRessources)
                                {
                                    <img src="@productionRessource.Ressource.Icon" title="@productionRessource.Ressource.RessourceName" />
                                    @: @((productionRessource.ProduceInMinute * dataset.Workers).ToString("N0"))
                                    <br />
                                }
                                foreach (var productionSoldier in dataset.Building.ProducingSoldiers)
                                {
                                    <img src="@productionSoldier.Soldier.Icon" title="add @productionSoldier.Soldier.SoldierName" />
                                    <br />
                                }
                            }
                            else
                            {
                                @:nothing
                                <br />
                            }

                            <br />
                            @:Consumes:
                            <br />
                            if (dataset.Building.ConsumingRessources.Count > 0)
                            {

                                foreach (var consumingRessources in dataset.Building.ConsumingRessources)
                                {
                                    <img src="@consumingRessources.Ressource.Icon" title="@consumingRessources.Ressource.RessourceName" />
                                    if (consumingRessources.ConsumeOnce)
                                    {
                                        @: @((consumingRessources.ConsumeInMinute * dataset.Level).ToString("N0"))
                                    }
                                    else
                                    {
                                        @: @((consumingRessources.ConsumeInMinute * dataset.Workers).ToString("N0"))
                                    }
                                    <br />
                                }
                            }
                            else
                            {
                                @:nothing
                                <br />
                            }

                            <br />
                            @:Upgrade Cost:
                            <br />
                            foreach (var ressourceCosts in dataset.Building.RessourceCost)
                            {
                                <img src="@ressourceCosts.Ressource.Icon" title="@ressourceCosts.Ressource.RessourceName" />
                                @((int)Math.Floor(ressourceCosts.Amount * 0.75))
                            }

                            <br />
                            if (dataset.WorkersMax > 0)
                            {
                                if (dataset.Workers > 0)
                                {
                          
                                    @:Workers:<span style="color:lightgreen"> @dataset.Workers.ToString("N0")</span> / @dataset.WorkersMax.ToString("N0")
                                    <br />
                                }
                                else
                                {
                                    @:Workers: <span style="color:orangered"> @dataset.Workers.ToString("N0")</span> / @dataset.WorkersMax.ToString("N0")
                                    <br />
                                }

                            }
                            foreach (var productionSoldier in dataset.Building.ProducingSoldiers)
                            {
                                if (dataset.ProductionDeactivated)
                                {
                                    <img src="@productionSoldier.Soldier.Icon" title="add @productionSoldier.Soldier.SoldierName" />@:x
                                    <br />
                                }
                                else
                                {
                                    <a asp-action="AddSoldier" asp-route-id="@dataset.TownBuildingID">
                                        <img src="@productionSoldier.Soldier.Icon" title="add @productionSoldier.Soldier.SoldierName" />
                                    </a>@:+@dataset.Level
                                    <br />
                                }
                            }
                        @:</div>
                    }
                }
            @:</div>
            <h3>Buildings to build:</h3>
            @:<div class="building-container">
                @foreach (var dataset in ViewData["Buildings"] as IEnumerable<Building>)
                {
                    if ((dataset.AvailableInStage <= Model.Stage && dataset.LockedInStage == false) ||
                        dataset.AvailableInStage == Model.Stage && dataset.LockedInStage)
                    {
                        @:<div class="building-card">
                            @:<img src=@dataset.Icon title="@dataset.BuildingName" />
                            bool buttonSwitch = false;
                            @foreach (var ressource in dataset.RessourceCost)
                            {
                                if (ressource.Amount > Model.TownRessources.FirstOrDefault(i => i.RessourceID == ressource.RessourceID).Amount)
                                {
                                    buttonSwitch = false;
                                    break;
                                }
                                else
                                {
                                    buttonSwitch = true;
                                }
                            }
                            if (buttonSwitch)
                            {
                                <a asp-action="AddBuilding" asp-route-id="@dataset.BuildingID"><img class="icon" src="~/img/Symbols/plus.png" title="Build" /></a>
                                <br />
                            }

                            if (dataset.PopulationMaxTemplate > 0)
                            {
                                <br />
                                @:Increases Population: @dataset.PopulationMaxTemplate.ToString("N0")
































































































































                            }
                            if (dataset.StorageMaxTemplate > 0)
                            {
                                <br />
                                @:Increases Storage: @dataset.StorageMaxTemplate.ToString("N0")
                            }
                            <br />
                            @:Produces:
                            <br />
                            foreach (var productionRessource in dataset.ProducingRessources)
                            {
                                <img src="@productionRessource.Ressource.Icon" title="@productionRessource.Ressource.RessourceName" />
                                @productionRessource.ProduceInMinute.ToString("N0")
                                <br />
                            }
                            <br />
                            @:Consumes:
                            <br />
                            if (dataset.ConsumingRessources.Count > 0)
                            {
                                foreach (var consumingRessources in dataset.ConsumingRessources)
                                {
                                    <img src="@consumingRessources.Ressource.Icon" title="@consumingRessources.Ressource.RessourceName" />
                                    @consumingRessources.ConsumeInMinute.ToString("N0")
                                    <br />
                                }
                            }
                            else
                            {
                                @:nothing
                                <br />
                            }
                            <br />
                            @:Ressources to Build:
                            <br />
                            foreach (var ressourceCosts in dataset.RessourceCost)
                            {
                                <img src="@ressourceCosts.Ressource.Icon" title="@ressourceCosts.Ressource.RessourceName" />
                                @ressourceCosts.Amount.ToString("N0")
                                <br />
                            }
                            <br />
                            @:Workplaces: @dataset.WorkersMaxTemplate.ToString("N0")
                        @:</div>
                    }
                }
            @:</div>
        }
    </div>
</div>
